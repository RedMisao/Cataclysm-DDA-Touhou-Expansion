[
  {
    "id": "baku_plushie_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_falls_asleep",
    "effect": [
      { "math": [ "var_baku_plushie_active", "=", "1" ] },
      { "u_location_variable": { "global_val": "var_baku_plushie" } }
    ]
  },
  {
    "id": "baku_plushie_return_eoc",
    "type": "effect_on_condition",
    "condition": { "math": [ "var_baku_plushie_active", ">=", "1" ] },
    "effect": [ 
      { "math": [ "var_baku_plushie_active", "=", "0" ] },
      { "u_teleport": { "global_val": "var_baku_plushie" } },
      { "u_message": "You just… woke up?", "type": "mixed" }
    ],
    "false_effect": [ 
      { "u_message": "Something's missing… You may want to count sheep again.", "type": "mixed" }
    ]
  },
  {
    "id": "history_book_eoc",
    "type": "effect_on_condition",
    "effect": [
      { "math": [ "var_history_book_int", "=", "max( 0, 9 - ( u_val('intelligence_base') + u_val('intelligence_bonus') ) )" ] },
      { "u_add_effect": "history_book_effect", "duration": "24 h" }
    ]
  },
  {
    "id": "lavender_grimoire_eoc",
    "type": "effect_on_condition",
    "effect": [
      {
        "if": {
          "message": "Select target", 
          "range": 16,
          "u_query_tile": "line_of_sight",
          "target_var": { "global_val": "var_lavender_grimoire_loc" }
        },
        "then": [ { "run_eocs": [ "lavender_grimoire_cast_eoc" ] } ],
        "else": { "u_message": "Canceled" }
      }
    ],
    "//": "This is so the player can select a target without knowing which spell will be casted"
  },
  {
    "id": "lavender_grimoire_cast_eoc",
    "type": "effect_on_condition",
    "effect": [
      { "math": [ "var_lavender_grimoire", "=", "rand(12) + 1" ] },
      {
        "switch": { "math": [ "var_lavender_grimoire" ] },
        "cases": [
          { 
            "case": 1, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_laser" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "The book shoots a laser!", "type": "mixed" }
            ]
          },
          { 
            "case": 2, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_laser_fat" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "The book shoots a laser!", "type": "mixed" }
            ]
          },
          { 
            "case": 3, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_firebolt" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "The book shoots a fire bolt!", "type": "mixed" }
            ]
          },
          { 
            "case": 4, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_firebolt_big" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "The book shoots a fire bolt!", "type": "mixed" }
            ]
          },
          { 
            "case": 5, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_fireball" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "The book shoots a fire ball!", "type": "mixed" }
            ]
          },
          { 
            "case": 6, "effect": [ 
              { "u_add_effect": "lavender_grimoire_bubble_effect", "duration": "10 m" },
              { "u_message": "", "type": "mixed" }
            ]
          },
          { 
            "case": 7, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_waterjet" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "The book shoots a water jet!", "type": "mixed" }
            ]
          },
          { 
            "case": 8, "effect": [ 
              { "u_add_effect": "lavender_grimoire_airbarrier_effect", "duration": "10 m" },
              { "u_message": "", "type": "mixed" }
            ]
          },
          { 
            "case": 9, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_airpush" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "A strong gust shoots forward!", "type": "mixed" }
            ]
          },
          { 
            "case": 10, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_crystalshard" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "Crystal shards materialize and fly in front of you!", "type": "mixed" }
            ]
          },
          { 
            "case": 11, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_bullet" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "The book shoots a bullet!", "type": "mixed" }
            ]
          },
          { 
            "case": 12, "effect": [ 
              { "u_cast_spell": { "id": "lavender_grimoire_saw" }, "loc": { "global_val": "var_lavender_grimoire_loc" } },
              { "u_message": "A saw blade materializes and shoots forward!", "type": "mixed" }
            ]
          }
        ]
      }
    ]
  },
  {
    "id": "lavender_grimoire_case_11_eoc",
    "type": "effect_on_condition",
    "effect": [
      { "u_location_variable": { "global_val": "var_lavender_grimoire_earthbarrier_loc" }, "max_radius": 9 },
      { 
        "revert_location": { "global_val": "var_lavender_grimoire_earthbarrier_loc" },
        "time_in_future": [ "16 s", "32 s" ],
        "key": "var_lavender_grimoire_earthbarrier_key"
      },
      { "u_cast_spell": { "id": "lavender_grimoire_earthbarrier" } },
      { "u_message": "Green slabs rise from the ground!", "type": "mixed" }
    ],
    "//WIP": "Disabled as this is not fully not reverting the location, sometimes the slabs fail to be removed"
  },
  {
    "id": "mini_hakkero_replica_eoc",
    "type": "effect_on_condition",
    "effect": [
      {
        "run_eoc_selector": [
          "mini_hakkero_replica_cast_mspark_eoc",
          "mini_hakkero_replica_cast_mmissile_eoc"
        ],
        "title": "Cast spell.",
        "names": [
          "Cast Master Spark (replica).",
          "Cast Magic missile (replica)."
        ],
        "keys": [ "1", "2" ],
        "descriptions": [
          "Shoot a very large, very strong laser.  At least that's how it should work.",
          "Shoot several magic proyectiles that look like missiles.  At least that's how it should work."
        ],
        "hide_failing": true,
        "allow_cancel": true
      }
    ],
    "false_effect": [ { "u_message": " ", "type": "mixed" } ]
  },
  {
    "id": "mini_hakkero_replica_cast_mspark_eoc",
    "type": "effect_on_condition",
    "effect": [
      {
        "if": {
          "message": "Select target", 
          "range": 32,
          "u_query_tile": "line_of_sight",
          "target_var": { "global_val": "var_mini_hakkero_replica_loc" }
        },
        "then": [
          { "math": [ "var_mini_hakkero_replica_rand", "=", "rand(19) + 1" ] },
          {
            "switch": { "math": [ "var_mini_hakkero_replica_rand" ] },
            "cases": [
              { 
                "case": 0, "effect": [ 
                  { "u_cast_spell": { "id": "mspark_electric" }, "loc": { "global_val": "var_mini_hakkero_replica_loc" } },
                  { "u_message": "The mini hakkero shoots a master spark replica!", "type": "mixed" }
                ]
              },
              { 
                "case": 16, "effect": [ 
                  { "u_cast_spell": { "id": "mspark_cold" }, "loc": { "global_val": "var_mini_hakkero_replica_loc" } },
                  { "u_message": "The mini hakkero shoots a cold spark!", "type": "mixed" }
                ]
              },
              { 
                "case": 18, "effect": [ 
                  { "u_cast_spell": { "id": "minispark_replica" }, "loc": { "global_val": "var_mini_hakkero_replica_loc" } },
                  { "u_message": "The mini hakkero fizzles, and shoots…  a strong light.", "type": "mixed" }
                ]
              },
              { 
                "case": 20, "effect": [ 
                  { "u_cast_spell": { "id": "mspark_misfire" } },
                  { "u_message": "The mini hakkero fizzles.", "type": "mixed" }
                ]
              }
            ]
          }
        ],
        "else": { "u_message": "Canceled" }
      }
    ],
    "false_effect": [ { "u_message": " ", "type": "mixed" } ],
    "//": "75% to shoot an electric master spark, 10% for a cold master spark, 10% for a mini master spark, 5% to misfire"
  },
  {
    "id": "mini_hakkero_replica_cast_mmissile_eoc",
    "type": "effect_on_condition",
    "effect": [
      {
        "if": {
          "message": "Select target", 
          "range": 32,
          "u_query_tile": "line_of_sight",
          "target_var": { "global_val": "var_mini_hakkero_replica_loc" }
        },
        "then": [
          { "math": [ "var_mini_hakkero_replica_rand", "=", "rand(19) + 1" ] },
          {
            "switch": { "math": [ "var_mini_hakkero_replica_rand" ] },
            "cases": [
              { 
                "case": 0, "effect": [ 
                  { "u_cast_spell": { "id": "mmissile_electric" }, "loc": { "global_val": "var_mini_hakkero_replica_loc" } },
                  { "u_message": "The mini hakkero shoots electric missiles!", "type": "mixed" }
                ]
              },
              { 
                "case": 16, "effect": [ 
                  { "u_cast_spell": { "id": "mmissile_flame" }, "loc": { "global_val": "var_mini_hakkero_replica_loc" } },
                  { "u_message": "The mini hakkero shoots fire missiles!", "type": "mixed" }
                ]
              },
              { 
                "case": 18, "effect": [ 
                  { "u_cast_spell": { "id": "mmissile_cold" }, "loc": { "global_val": "var_mini_hakkero_replica_loc" } },
                  { "u_message": "The mini hakkero shoots ice missiles!", "type": "mixed" }
                ]
              },
              { 
                "case": 19, "effect": [ 
                  { "u_cast_spell": { "id": "mmissile_misfire" } },
                  { "u_message": "The mini hakkero shoots… little trees?", "type": "mixed" }
                ]
              }
            ]
          }
        ],
        "else": { "u_message": "Canceled" }
      }
    ],
    "false_effect": [ { "u_message": " ", "type": "mixed" } ],
    "//": "65% chance to shoot electric missiles, 15% to shoot flaming missiles, 10% to shoot cold missiles, 10% to misfire"
  },
  {
    "id": "point_life_fragment_eoc",
    "type": "effect_on_condition",
    "effect": [
      {
        "u_run_inv_eocs": "all",
        "search_data": [ { "id": "point_life_fragment", "wielded_only": true } ],
        "true_eocs": [ "point_life_fragment_confirm_eoc" ],
        "false_eocs": [ 
          {
            "id": "point_life_fragment_no",
            "effect": [ { "u_message": "You need to wield the life fragment.", "type": "mixed" } ]
          }
        ]
      }
    ],
    "//": "Based on point_skill_eoc "
  },
  {
    "id": "point_life_fragment_confirm_eoc",
    "type": "effect_on_condition",
    "effect": [
      {
        "run_eoc_selector": [ "point_life_fragment_link_eoc" ],
        "title": "Use life fragment",
        "names": [ "Consume life fragment?" ],
        "keys": [ "1" ],
        "descriptions": [ "Consume the life fragment to increase your HP by 30." ],
        "hide_failing": true,
        "allow_cancel": true
      }
    ],
    "//": "This is based on LoLK's 3 life fragments = +1 live. However, default starting hp is 85, and 85 / 3 = 28.333, which is ugly, so this rounds up to 30 instead"
  },
  {
    "id": "point_life_fragment_link_eoc",
    "type": "effect_on_condition",
    "effect": [ { "run_eocs": [ "point_life_fragment_select_eoc" ] } ],
    "//": "Link required as directly running the next EOC will never be TRUE (and throw a warning) unless it's run at least once"
  },
  {
    "id": "point_life_fragment_select_eoc",
    "type": "effect_on_condition",
    "condition": { "u_has_trait": "point_life_fragment_mut" },
    "effect": [
      { "math": [ "var_point_life_fragment", "+=", "30" ] },
      { "u_consume_item": "point_life_fragment", "count": 1 },
      { "u_message": "Your HP has increased.", "type": "good" }
    ],
    "false_effect": [ 
      { "math": [ "var_point_life_fragment", "+=", "30" ] },
      { "u_consume_item": "point_life_fragment", "count": 1 },
      { "u_add_trait": "point_life_fragment_mut" },
      { "u_message": "Your HP has increased.", "type": "good" }
    ]
  },
  {
    "id": "possessed_trumpet_eoc",
    "type": "effect_on_condition",
    "effect": [
      { "math": [ "var_posessed_trumpet_stat", "=", "rand(8) + 1" ] },
      { "math": [ "var_posessed_trumpet_dex", "=", "0" ] },
      { "math": [ "var_posessed_trumpet_int", "=", "0" ] },
      { "math": [ "var_posessed_trumpet_per", "=", "0" ] },
      { "math": [ "var_posessed_trumpet_str", "=", "0" ] },
      { "math": [ "var_posessed_trumpet_morale", "=", "rand(4) + 1" ] },
      {
        "switch": { "math": [ "var_posessed_trumpet_stat" ] },
        "cases": [
          { 
            "case": 1, "effect": [ 
              { "math": [ "var_posessed_trumpet_dex", "=", "1 + rand(2)" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "You feel more dextrous!", "type": "good" }
            ]
          },
          { 
            "case": 2, "effect": [ 
              { "math": [ "var_posessed_trumpet_dex", "=", " - ( 1 + rand(2) )" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "You feel sluggish…", "type": "bad" }
            ]
          },
          { 
            "case": 3, "effect": [ 
              { "math": [ "var_posessed_trumpet_int", "=", "1 + rand(2)" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "Your head feels clear!", "type": "good" }
            ]
          },
          { 
            "case": 4, "effect": [ 
              { "math": [ "var_posessed_trumpet_int", "=", " - ( 1 + rand(2) )" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "You feel smarter!", "type": "good" }
            ]
          },
          { 
            "case": 5, "effect": [ 
              { "math": [ "var_posessed_trumpet_per", "=", "1 + rand(2)" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "You feel more sensitive to your surroundings.", "type": "good" }
            ]
          },
          { 
            "case": 6, "effect": [ 
              { "math": [ "var_posessed_trumpet_per", "=", " - ( 1 + rand(2) )" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "You feel numb, deafened.", "type": "bad" }
            ]
          },
          { 
            "case": 7, "effect": [ 
              { "math": [ "var_posessed_trumpet_str", "=", "1 + rand(2)" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "You feel stronger!", "type": "bad" }
            ]
          },
          { 
            "case": 8, "effect": [ 
              { "math": [ "var_posessed_trumpet_str", "=", " - ( 1 + rand(2) )" ] },
              { "u_add_effect": "possessed_trumpet_stat_effect", "duration": "12 h" },
              { "u_message": "You feel weaker.", "type": "bad" }
            ]
          }
        ]
      },
      {
        "switch": { "math": [ "var_posessed_trumpet_morale" ] },
        "cases": [
          { 
            "case": 1, "effect": [ 
              { "math": [ "var_posessed_trumpet_morale_bonus", "=", "11 + rand(6)" ] },
              { "u_cast_spell": { "id": "possessed_trumpet_morale_spell" } }
            ]
          },
          { 
            "case": 2, "effect": [ 
              { "math": [ "var_posessed_trumpet_morale_bonus", "=", " - ( 11 + rand(6) )" ] },
              { "u_cast_spell": { "id": "possessed_trumpet_morale_spell" } }
            ]
          },
          { 
            "case": 3, "effect": [ 
              { "math": [ "var_posessed_trumpet_morale_bonus", "=", "22 + rand(11)" ] },
              { "u_cast_spell": { "id": "possessed_trumpet_morale_spell" } }
            ]
          },
          { 
            "case": 4, "effect": [ 
              { "math": [ "var_posessed_trumpet_morale_bonus", "=", " - ( 22 + rand(11) )" ] },
              { "u_cast_spell": { "id": "possessed_trumpet_morale_spell" } }
            ]
          }
        ]
      }
    ],
    "//": "The morale is given by a spell instead of EOC, so it isn't limited to the player"
  },
  {
    "id": "thorny_box_eoc",
    "type": "effect_on_condition",
    "condition": { "not": { "u_has_trait": "PROF_KASEN" } },
    "effect": [
      { "u_add_effect": "thorny_box_effect", "duration": "1440 m" },
      { "math": [ "u_var_thorny_box", "+=", "1" ] },
      { "math": [ "u_var_thorny_box_timer", "+=", "24 + rand(48)" ] }, 
      { "run_eocs": [ "thorny_box_timer_eoc" ] },
      { "u_message": "You drink from the box.", "type": "mixed" }
    ],
    "false_effect": [ 
      { "u_add_effect": "thorny_box_effect", "duration": "1440 m" },
      { "u_message": "You drink from the box.", "type": "mixed" }
    ],
    "//": "First checks if whoever drinks it is not Kasen. Then it adds the healing effect for 24 h, adds var_DRANK and the var_TIMER for ~48 h on average, and runs the timer EOC below",
    "//2": "This allows the demerit to stack if the box is continuously drank from, otherwise the duration just refreshes",
    "//3": "If it was Kasen who drank from the box, it just adds the positive effect. Because well, she's..."
  },
  {
    "id": "thorny_box_timer_eoc",
    "type": "effect_on_condition",
    "condition": { "math": [ "u_var_thorny_box_timer", ">=", "1" ] },
    "effect": [
      { "u_add_effect": "thorny_box_demerit_effect", "duration": "2880 m" },
      { "queue_eocs": [ "thorny_box_timer2_eoc" ], "time_in_future": "60 m" }
    ],
    "false_effect": [ 
      { "math": [ "u_var_thorny_box", "=", "0" ] },
      { "u_lose_effect": "thorny_box_demerit_effect" }
    ],
    "//": "This runs as long as there's var_TIMER. It adds the demerit effect with at least x2 duration of the healing effect, and queues the var_TIMER -1 EOC below every 1 h"
  },
  {
    "id": "thorny_box_timer2_eoc",
    "type": "effect_on_condition",
    "effect": [
      { "math": [ "u_var_thorny_box_timer", "-=", "1" ] },
      { "run_eocs": [ "thorny_box_timer_eoc" ] }
    ]
  },
  {
    "id": "wind_blessing_eoc",
    "type": "effect_on_condition",
    "effect": [
      { "math": [ "var_wind_blessing_dex", "=", "rand(6)" ] },
      { "math": [ "var_wind_blessing_int", "=", "rand(6)" ] },
      { "math": [ "var_wind_blessing_per", "=", "rand(6)" ] },
      { "math": [ "var_wind_blessing_str", "=", "rand(6)" ] },
      { "queue_eocs": [ "wind_blessing_eoc" ], "time_in_future": "30 m" }
    ],
    "//note": "Adding a condition doesn't work as it never returns TRUE. Other than that, this grants the random stats every 30 min or so. The condition is required only to disable it from self-queueing all the time"
  }
]
