[
  {
    "id": "gap_generator_OLD",
    "type": "TOOL",
    "name": { "str": "gap generator", "str_pl": "gap generators" },
    "description": "A… black blob that bends light inside it.  You feel weirder by having it around.",
    "volume": "900 ml",
    "weight": "900 g",
    "longest_side": "6 cm",
    "price_postapoc": 25000,
    "to_hit": { "balance": "neutral", "grip": "none", "length": "hand", "surface": "any" },
    "melee_damage": { "bash": 1 },
    "material": [ "steel" ],
    "symbol": "/",
    "looks_like": "slime_scrap",
    "color": "black",
    "charges_per_use": 1,
    "pocket_data": [ { "pocket_type": "MAGAZINE", "ammo_restriction": { "battery": 3 } } ],
    "relic_data": { "charge_info": { "regenerate_ammo": true, "recharge_type": "periodic", "time": "8 h" } },
    "use_action": [
      { "type": "cast_spell", "spell_id": "gap_place_OLD", "no_fail": true, "level": 1 },
      {
        "type": "transform",
        "target": "gap_generator2_OLD",
        "menu_text": "Turn inside out",
        "msg": "You turn the gap generator inside out.",
        "active": true
      }
    ],
    "flags": [ "NO_RELOAD", "NO_UNLOAD", "TRADER_AVOID", "UNBREAKABLE" ],
    "//": "Yes, this is too similar to Aftershock's translocator spell. No, that wasn't inteded, ideally the deploy_furn and cast_spell ranges should be inverted: deploy gap_2 at long range and move into gap_1 at short range, creating max two gaps that stay active for some time",
    "//2": "This works as intended, I just don't like that the placed gap has to be `a`ctivated before use, and the activation message is hardcoded"
  },
  {
    "id": "gap_place_OLD",
    "type": "SPELL",
    "name": "Gap",
    "description": "Open a gap.",
    "spell_class": "NONE",
    "valid_targets": [ "ground" ],
    "effect": "ter_transform",
    "effect_str": "gap_fur_OLD",
    "shape": "blast",
    "min_range": 1,
    "max_range": 1,
    "max_level": 1,
    "difficulty": -20,
    "base_casting_time": 150,
    "base_energy_cost": 0,
    "energy_source": "MANA",
    "flags": [ "NO_HANDS", "NO_LEGS" ]
  },
  {
    "id": "gap_generator2_OLD",
    "type": "TOOL",
    "name": { "str": "gap generator", "str_pl": "gap generators" },
    "description": "A… black blob that bends light outside it.  You feel weirder by having it around.",
    "volume": "900 ml",
    "weight": "900 g",
    "longest_side": "6 cm",
    "price_postapoc": 25000,
    "to_hit": { "balance": "neutral", "grip": "none", "length": "hand", "surface": "any" },
    "melee_damage": { "bash": 1 },
    "material": [ "steel" ],
    "symbol": "/",
    "looks_like": "slime_scrap",
    "color": "black",
    "charges_per_use": 1,
    "pocket_data": [ { "pocket_type": "MAGAZINE", "ammo_restriction": { "battery": 3 } } ],
    "relic_data": { "charge_info": { "regenerate_ammo": true, "recharge_type": "periodic", "time": "8 h" } },
    "use_action": [
      { "type": "cast_spell", "spell_id": "gap_move_OLD", "no_fail": true, "level": 1 },
      {
        "type": "transform",
        "target": "gap_generator_OLD",
        "menu_text": "Turn outside in",
        "msg": "You turn the gap generator outside in.",
        "active": true
      }
    ],
    "flags": [ "NO_RELOAD", "NO_UNLOAD", "UNBREAKABLE" ]
  },
  {
    "id": "gap_move_OLD",
    "type": "SPELL",
    "name": "Gap",
    "description": "Move into a gap.",
    "spell_class": "NONE",
    "valid_targets": [ "self" ],
    "effect": "translocate",
    "shape": "blast",
    "max_level": 1,
    "difficulty": -20,
    "base_casting_time": 300,
    "base_energy_cost": 0,
    "energy_source": "MANA",
    "flags": [ "IGNORE_WALLS", "NO_HANDS", "NO_LEGS", "NO_PROJECTILE", "SILENT" ]
  },
  {
    "id": "iku_readweather_eoc_WIP",
    "type": "effect_on_condition",
    "effect": [
      {
        "if": {
          "and": [
            { "math": [ "cause_portal_storm", "==", "1" ] },
            { "math": [ "distance(_weather_location, portal_storm_center)", "<=", "value_or(portal_storm_distance, 50)" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "portal_storm" },
            "then": { "u_message": "Something's wrong.", "type": "bad" }
          },
          {
            "if": { "not": { "is_weather": "portal_storm" } },
            "then": { "u_message": "Something's off…", "type": "mixed" }
          }
        ]
      },
      {
        "if": {
          "and": [
            { "math": [ "cause_portal_storm", "==", "1" ] },
            { "math": [ "distance(_weather_location, portal_storm_center)", "<=", "value_or(portal_storm_close_distance, 100)" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "close_portal_storm" },
            "then": { "u_message": "Something's wrong.", "type": "bad" }
          },
          {
            "if": { "not": { "is_weather": "close_portal_storm" } },
            "then": { "u_message": "Something's off…", "type": "mixed" }
          }
        ]
      },
      {
        "if": {
          "and": [
            { "math": [ "cause_portal_storm", "==", "1" ] },
            { "math": [ "distance(_weather_location, portal_storm_center)", "<=", "value_or(portal_storm_distant_distance, 200)" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "distant_portal_storm" },
            "then": { "u_message": "Something's wrong.", "type": "bad" }
          },
          {
            "if": { "not": { "is_weather": "distant_portal_storm" } },
            "then": { "u_message": "Something's off…", "type": "mixed" }
          }
        ]
      },
      {
        "if": {
          "and": [
            { "math": [ "cause_early_portal_storm", "==", "1" ] },
            { "math": [ "distance(_weather_location, portal_storm_center)", "<=", "value_or(portal_storm_distant_distance, 200)" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "early_portal_storm" },
            "then": { "u_message": "Something's wrong.", "type": "bad" }
          },
          {
            "if": { "not": { "is_weather": "early_portal_storm" } },
            "then": { "u_message": "Something's off…", "type": "mixed" }
          }
        ]
      },
      {
        "if": { 
          "or": [ 
            { "math": [ "night_parade_proc", "<", "5" ] }, 
            { "math": [ "var_night_parade_started", ">=", "1" ] }
          ] 
        },
        "then": [ 
          { "u_message": "Uh oh…", "type": "bad" }
        ],
        "//thex": ""
      },
      {
        "if": { "math": [ "silence_hour_proc", "<", "5" ] },
        "then": [ 
          { "u_message": "Uh oh…", "type": "bad" }
        ],
        "//thex": ""
      },
      {
        "if": { "and": [ { "math": [ "weather('temperature')", "<", "from_fahrenheit( 33 )" ] }, { "math": [ "weather('windpower')", ">=", "15" ] } ] },
        "then": [ 
          {
            "if": { "is_weather": "snowstorm" },
            "then": { "u_message": "There is a snowstorm.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "snowstorm" } },
            "then": { "u_message": "It is going to snow.", "type": "good" }
          }
        ]
      },
      {
        "if": { "math": [ "weather('temperature')", "<", "from_fahrenheit( 33 )" ] },
        "then": [ 
          {
            "if": { "is_weather": "flurries" },
            "then": { "u_message": "Snow is falling.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "flurries" } },
            "then": { "u_message": "Snow is going to fall.", "type": "good" }
          }
        ]
      },
      {
        "if": {
          "and": [
            { "math": [ "weather_blood_rain_proc", ">=", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] }, 
            { "math": [ "weather('pressure')", "<", "990" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "lightning" },
            "then": { "u_message": "There is a lightning storm.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "lightning" } },
            "then": { "u_message": "There is going to be a lightning storm.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_blood_rain_proc", "<", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] }, 
            { "math": [ "weather('pressure')", "<", "990" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "lightning_blood" },
            "then": { "u_message": "This lightning storm is abnormal.", "type": "mixed" }
          },
          {
            "if": { "not": { "is_weather": "lightning_blood" } },
            "then": { "u_message": "There is going to be a lightning storm, although something is off…", "type": "mixed" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "math": [ "weather_blood_rain_proc", ">=", "10" ] }, 
            { "math": [ "weather_carnian_active", ">=", "1" ] }, 
            { "math": [ "weather('pressure')", "<", "990" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "lightning_carnian" },
            "then": { "u_message": "There is a lightning storm.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "lightning_carnian" } },
            "then": { "u_message": "There is going to be a lightning storm.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "math": [ "weather_blood_rain_proc", ">=", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] }, 
            { "math": [ "weather('pressure')", "<", "996" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "thunder" },
            "then": { "u_message": "There is a thunderstorm.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "thunder" } },
            "then": { "u_message": "There is going to be a thunderstorm.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_blood_rain_proc", "<", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] }, 
            { "math": [ "weather('pressure')", "<", "996" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "thunder_blood" },
            "then": { "u_message": "This thunderstorm is abnormal.", "type": "mixed" }
          },
          {
            "if": { "not": { "is_weather": "thunder_blood" } },
            "then": { "u_message": "There is going to be a thunderstorm, although something is off…", "type": "mixed" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_blood_rain_proc", ">=", "10" ] }, 
            { "math": [ "weather_carnian_active", ">=", "1" ] }, 
            { "math": [ "weather('pressure')", "<", "996" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "thunder_carnian" },
            "then": { "u_message": "There is a thunderstorm.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "thunder_carnian" } },
            "then": { "u_message": "There is going to be a thunderstorm.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "math": [ "weather_blood_rain_proc", ">=", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] }, 
            { "math": [ "weather('temperature')", ">=", "from_fahrenheit( 33 )" ] },
            { "math": [ "weather('windpower')", ">=", "15" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "rainstorm" },
            "then": { "u_message": "There is a rainstorm.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "rainstorm" } },
            "then": { "u_message": "There is going to be a rainstorm.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_blood_rain_proc", "<", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] }, 
            { "math": [ "weather('temperature')", ">=", "from_fahrenheit( 33 )" ] },
            { "math": [ "weather('windpower')", ">=", "15" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "rainstorm_blood" },
            "then": { "u_message": "This rainstorm is abnormal.", "type": "mixed" }
          },
          {
            "if": { "not": { "is_weather": "rainstorm_blood" } },
            "then": { "u_message": "There is going to be a rainstorm, although something is off…", "type": "mixed" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_blood_rain_proc", ">=", "10" ] }, 
            { "math": [ "weather_carnian_active", ">=", "1" ] }, 
            { "math": [ "weather('temperature')", ">=", "from_fahrenheit( 33 )" ] },
            { "math": [ "weather('windpower')", ">=", "15" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "rainstorm_carnian" },
            "then": { "u_message": "There is a rainstorm.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "rainstorm_carnian" } },
            "then": { "u_message": "There is going to be a thunderstorm.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": { 
          "and": [ 
            { "math": [ "weather_blood_rain_proc", ">=", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] },
            { 
              "or": [ 
                { "math": [ "weather('humidity')", ">=", "98" ] }, 
                { "math": [ "weather('pressure')", "<", "993" ] } 
              ]
            }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "rain" },
            "then": { "u_message": "It is raining.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "rain" } },
            "then": { "u_message": "It is going to rain.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": { 
          "and": [ 
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } }, 
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } }, 
            { "math": [ "weather_blood_rain_proc", "<", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] },
            { 
              "or": [ 
                { "math": [ "weather('humidity')", ">=", "98" ] }, 
                { "math": [ "weather('pressure')", "<", "993" ] } 
              ]
            }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "rain_blood" },
            "then": { "u_message": "This rain is abnormal.", "type": "mixed" }
          },
          {
            "if": { "not": { "is_weather": "rain_blood" } },
            "then": { "u_message": "It is going to rain, although something is off…", "type": "mixed" }
          }
        ],
        "//thex": ""
      },
      {
        "if": { 
          "and": [ 
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } }, 
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } }, 
            { "math": [ "weather_blood_rain_proc", "<", "10" ] }, 
            { "math": [ "weather_carnian_active", "<", "1" ] },
            { 
              "or": [ 
                { "math": [ "weather('humidity')", ">=", "98" ] }, 
                { "math": [ "weather('pressure')", "<", "993" ] } 
              ]
            }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "rain_carnian" },
            "then": { "u_message": "It is raining.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "rain_carnian" } },
            "then": { "u_message": "It is going to rain.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": { "math": [ "purifying_rain_proc", "==", "1" ] },
        "then": [ 
          {
            "if": { "is_weather": "rain_purifying" },
            "then": { "u_message": "This is no good.", "type": "bad" }
          },
          {
            "if": { "not": { "is_weather": "rain_purifying" } },
            "then": { "u_message": "This is no good.", "type": "bad" }
          }
        ],
        "//thex": ""
      },
      {
        "if": { "or": [ { "math": [ "weather('humidity')", ">=", "97" ] }, { "math": [ "weather('pressure')", "<", "1000" ] } ] },
        "then": [ 
          {
            "if": { "is_weather": "drizzle" },
            "then": { "u_message": "There is a drizzle.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "drizzle" } },
            "then": { "u_message": "There is going to be a drizzle.", "type": "good" }
          }
        ]
      },
      {
        "if": { "or": [ { "math": [ "weather('humidity')", ">=", "96" ] }, { "math": [ "weather('pressure')", "<", "1003" ] } ] },
        "then": [ 
          {
            "if": { "is_weather": "light_drizzle" },
            "then": { "u_message": "There is a light drizzle.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "light_drizzle" } },
            "then": { "u_message": "There is going to be a light drizzle.", "type": "good" }
          }
        ]
      },
      {
        "if": { 
          "and": [ 
            { "math": [ "weather_scarlet_proc", ">=", "20" ] }, 
            { "math": [ "weather('humidity')", ">=", "40" ] }, 
            { "math": [ "weather('pressure')", "<", "1010" ] } 
          ] 
        },
        "then": [ 
          {
            "if": { "is_weather": "cloudy" },
            "then": { "u_message": "It is cloudy.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "cloudy" } },
            "then": { "u_message": "It's going to get cloudy.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": { 
          "and": [ 
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_scarlet_proc", "<", "20" ] }, 
            { "math": [ "weather('humidity')", ">=", "40" ] }, 
            { "math": [ "weather('pressure')", "<", "1010" ] } 
          ] 
        },
        "then": [ 
          {
            "if": { "is_weather": "cloudy_scarlet" },
            "then": { "u_message": "There are scarlet clouds.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "cloudy_scarlet" } },
            "then": { "u_message": "There are going to be scarlet clouds.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "math": [ "weather_scarlet_proc", ">=", "25" ] }, 
            { "math": [ "weather('windpower')", "<", "12" ] },
            { "math": [ "weather('windpower')", ">", "0" ] },
            { "math": [ "dew_point_factor(celsius(weather('temperature')))", "<=", "2.5" ] },
            { "math": [ "weather('humidity')", "<", "90" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "mist" },
            "then": { "u_message": "There is mist.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "mist" } },
            "then": { "u_message": "There is going to be mist.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_scarlet_proc", "<", "25" ] }, 
            { "math": [ "weather('windpower')", "<", "12" ] },
            { "math": [ "weather('windpower')", ">", "0" ] },
            { "math": [ "dew_point_factor(celsius(weather('temperature')))", "<=", "2.5" ] },
            { "math": [ "weather('humidity')", "<", "90" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "mist_scarlet" },
            "then": { "u_message": "There is scarlet mist.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "mist_scarlet" } },
            "then": { "u_message": "There is going to be scarlet mist.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "math": [ "weather_scarlet_proc", ">=", "20" ] }, 
            { "math": [ "weather('windpower')", "<", "12" ] },
            { "math": [ "weather('windpower')", ">", "0" ] },
            { "math": [ "dew_point_factor(celsius(weather('temperature')))", "<=", "2.5" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "fog" },
            "then": { "u_message": "There is fog.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "fog" } },
            "then": { "u_message": "There is going to be fog.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": {
          "and": [
            { "not": { "math": [ "cause_early_portal_storm", "==", "1" ] } },
            { "not": { "math": [ "cause_portal_storm", "==", "1" ] } },
            { "math": [ "weather_scarlet_proc", "<", "20" ] }, 
            { "math": [ "weather('windpower')", "<", "12" ] },
            { "math": [ "weather('windpower')", ">", "0" ] },
            { "math": [ "dew_point_factor(celsius(weather('temperature')))", "<=", "2.5" ] }
          ]
        },
        "then": [ 
          {
            "if": { "is_weather": "fog_scarlet" },
            "then": { "u_message": "There is scarlet fog.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "fog_scarlet" } },
            "then": { "u_message": "There is going to be scarlet fog.", "type": "good" }
          }
        ],
        "//thex": ""
      },
      {
        "if": { 
          "and": [ 
            "is_day", 
            { "math": [ "weather('humidity')", ">=", "70" ] }, 
            { "math": [ "weather('pressure')", ">=", "1020" ] } 
          ] 
        }, 
        "then": [ 
          {
            "if": { "is_weather": "sunny" },
            "then": { "u_message": "It is sunny.", "type": "good" }
          },
          {
            "if": { "not": { "is_weather": "sunny" } },
            "then": { "u_message": "It's going to be sunny.", "type": "good" }
          }
        ]
      },
      {
        "if": { 
          "and": [ 
            { "not": { "is_weather": "sunny" } },
            { "not": { "is_weather": "cloudy" } },
            { "not": { "is_weather": "cloudy_scarlet" } },
            { "not": { "is_weather": "light_drizzle" } },
            { "not": { "is_weather": "drizzle" } },
            { "not": { "is_weather": "rain" } },
            { "not": { "is_weather": "rain_blood" } },
            { "not": { "is_weather": "rain_carnian" } },
            { "not": { "is_weather": "rain_purifying" } },
            { "not": { "is_weather": "rainstorm" } },
            { "not": { "is_weather": "rainstorm_blood" } },
            { "not": { "is_weather": "rainstorm_carnian" } },
            { "not": { "is_weather": "thunder" } },
            { "not": { "is_weather": "thunder_blood" } },
            { "not": { "is_weather": "thunder_carnian" } },
            { "not": { "is_weather": "lightning" } },
            { "not": { "is_weather": "lightning_blood" } },
            { "not": { "is_weather": "lightning_carnian" } },
            { "not": { "is_weather": "flurries" } },
            { "not": { "is_weather": "snowstorm" } },
            { "not": { "is_weather": "mist" } },
            { "not": { "is_weather": "mist_scarlet" } },
            { "not": { "is_weather": "fog" } },
            { "not": { "is_weather": "fog_scarlet" } },
            { "not": { "is_weather": "night_parade" } },
            { "not": { "is_weather": "silence_hour" } },
            { "not": { "is_weather": "early_portal_storm" } },
            { "not": { "is_weather": "portal_storm" } },
            { "not": { "is_weather": "close_portal_storm" } },
            { "not": { "is_weather": "distant_portal_storm" } }
          ] 
        }, 
        "then": { "u_message": "It is clear.", "type": "good" },
        "//thex": ""
      }
    ],
    "//": "Same as iku_readweather_eoc from the base mod, except this adds the mod's custom weather",
    "//2": "This is not working because conditions overlap (weather_type also has priorities), so the predictions are printing 'weather A is next, weather B is next, weather C is next' and then weather D happens"
  }
]
